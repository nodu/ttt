"use strict";window.app=angular.module("TicketyApp",["firebase"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/splash.html",controller:"SplashCtrl"}).when("/play_local",{templateUrl:"views/play_local.html",controller:"MainCtrl"}).when("/how_to",{templateUrl:"views/how_to.html",controller:"HowToCtrl"}).when("/match_player",{templateUrl:"views/match_player.html",controller:"MatchPlayerCtrl"}).when("/mplayer/:id/:mySymbol",{templateUrl:"views/mplayer.html",controller:"MplayerCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("TicketyApp").controller("MainCtrl",["$scope","$location","$timeout","$rootScope",function(a,b,c,d){d.currentPage="play_local";var e=0;a.turn=function(){e+=1},a.squares=[" "," "," "," "," "," "," "," "," "],a.makeMove=function(b){a.endGame?window.alert("Game's over Loser!"):(a.mark=0===e%2?"x":"o",a.addMark(b,a.mark),a.testForWin()&&c(function(){window.alert(a.mark.toUpperCase()+" won!")},50))},a.addMark=function(b,c){"x"===a.squares[b]||"o"===a.squares[b]?e--:a.squares[b]=c},a.testForWin=function(){a.squaresStr=a.squares.join("");var b=/\s/g,c=a.squaresStr.replace(b,".");if(0===e%2)var d=X_WIN_PATTERNS;else var d=O_WIN_PATTERNS;for(var f=0;f<d.length;f++){var g=new RegExp(d[f],"i");if(c.match(g))return a.endGame=!0,!0}return 9===e+1&&(a.endGame=!0,a.mark="Cat"),!1}}]),angular.module("TicketyApp").controller("MatchPlayerCtrl",["$scope","$timeout","$location","$rootScope","angularFire",function(a,b,c,d,e){function f(){return Math.floor(16777215*Math.random()).toString(16)}d.currentPage="match",a.waitingRoom={};var g=new Firebase("https://hkwdi1-inst.firebaseio.com/waiting_room");a.promise=e(g,a,"waitingRoom"),a.promise.then(function(){1==a.waitingRoom.xJoined?a.joinWaitingRoom():a.createWaitingRoom()}),a.createWaitingRoom=function(){a.waitingRoom={xJoined:!0,gameBoardNumber:f()},a.noticeMessage="You are x, waiting for opponent.",g.on("child_removed",function(){c.path("mplayer/"+a.waitingRoom.gameBoardNumber+"/x")})},a.joinWaitingRoom=function(){var b=a.waitingRoom.gameBoardNumber;a.waitingRoom={},c.path("mplayer/"+b+"/o")}}]),angular.module("TicketyApp").controller("HowToCtrl",["$scope","$rootScope",function(a,b){b.currentPage="how_to",a.homepage=function(){$location.path("/")}}]),angular.module("TicketyApp").controller("SplashCtrl",["$scope","$location","$rootScope",function(a,b,c){c.currentPage="home"}]),angular.module("TicketyApp").controller("MplayerCtrl",["$scope","$routeParams","angularFire","$timeout",function(a,b,c,d){function e(a,b){return!(b>a||a>b)}a.mySymbol=b.mySymbol,a.myTurn=!1,a.turnNum=0,a.endGame=!1,a.gameBoard=[" "," "," "," "," "," "," "," "," "];var f=new Firebase("https://hkwdi1-inst.firebaseio.com/room/"+b.id);a.promise=c(f,a,"gameBoard",[]),a.promise.then(function(){a.gameBoard=[" "," "," "," "," "," "," "," "," "],"x"==b.mySymbol?(console.log("I am First Move: Symbol: "+b.mySymbol),a.myTurn=!0):(console.log("I am Second Move: Symbol: "+b.mySymbol),a.myTurn=!1)}),f.on("value",function(b){console.log("wait received"),a.endGame||a.myTurn?console.log("it is my turn but I receive "):null!=b.val()?e(b.val(),a.gameBoard)?console.log("same gameboard"):(console.log("diff gameboard - data from remote"),a.testForLose(a.mySymbol,b.val())?(console.log("opponent won. you lost."),d(function(){window.alert("You lost!")},50),a.endGame=!0):a.testForCat()?(console.log("Cat Won"),a.mySymbol="Cat",a.endGame=!0):(console.log("my turn. I can pick a square"),a.myTurn=!0,a.turnNum++),console.log("After opponent click: turn # "+a.turnNum+"$scope.gameBoard: "+b.val().join(""))):console.log("snapshot is empty")}),a.handleClick=function(b){a.endGame||(a.myTurn&&!a.isOccupied(b)?(console.log("I clicked on index: "+b),a.gameBoard[b]=a.mySymbol,a.testForWin(a.mySymbol,a.gameBoard)?(d(function(){window.alert("You won!")},50),a.endGame=!0):a.testForCat()?(a.mySymbol="Cat",a.endGame=!0):(a.myTurn=!1,a.turnNum++),console.log("After my click: turn # "+a.turnNum+"$scope.gameBoard: "+a.gameBoard.join(""))):alert("It's NOT your turn fool!"))},a.isOccupied=function(b){return"x"===a.gameBoard[b]||"o"===a.gameBoard[b]};var g=["xxx......","...xxx...","......xxx","x..x..x..",".x..x..x.","..x..x..x","x...x...x","..x.x.x.."],h=g.map(function(a){return a.replace(/x/g,"o")});a.testForWin=function(b,c){console.log("hi testForWin has been fired!"),a.gameBoardStr=c.join("");var d=/\s/g,e=a.gameBoardStr.replace(d,".");if(console.log("I'm gameboard string: "+e),"x"==b)var f=g;else var f=h;for(var i=0;i<f.length;i++){var j=new RegExp(f[i],"i");if(e.match(j))return console.log("Pattern Matching success. We Won"),!0}return!1},a.testForLose=function(b,c){var d="x"==b?"o":"x";return a.testForWin(d,c)},a.testForCat=function(){return 9===a.turnNum}}]);